{"version":3,"file":"UmbBlockCatalogueModalElement-WtyZSpDL.js","sources":["../../../../../kraftvaerk.umbraco.blockfilter.Frontend/src/blockfilter-api/core/BaseHttpRequest.ts","../../../../../kraftvaerk.umbraco.blockfilter.Frontend/src/blockfilter-api/core/ApiError.ts","../../../../../kraftvaerk.umbraco.blockfilter.Frontend/src/blockfilter-api/core/CancelablePromise.ts","../../../../../kraftvaerk.umbraco.blockfilter.Frontend/src/blockfilter-api/core/request.ts","../../../../../kraftvaerk.umbraco.blockfilter.Frontend/src/blockfilter-api/core/FetchHttpRequest.ts","../../../../../kraftvaerk.umbraco.blockfilter.Frontend/src/blockfilter-api/services/V1Service.ts","../../../../../kraftvaerk.umbraco.blockfilter.Frontend/src/blockfilter-api/BlockfilterClient.ts","../../../../../kraftvaerk.umbraco.blockfilter.Frontend/src/elements/UmbBlockCatalogueModalElement.ts"],"sourcesContent":["/* generated using openapi-typescript-codegen -- do not edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { CancelablePromise } from './CancelablePromise';\nimport type { OpenAPIConfig } from './OpenAPI';\n\nexport abstract class BaseHttpRequest {\n\n    constructor(public readonly config: OpenAPIConfig) {}\n\n    public abstract request<T>(options: ApiRequestOptions): CancelablePromise<T>;\n}\r\n","/* generated using openapi-typescript-codegen -- do not edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\n\nexport class ApiError extends Error {\n    public readonly url: string;\n    public readonly status: number;\n    public readonly statusText: string;\n    public readonly body: any;\n    public readonly request: ApiRequestOptions;\n\n    constructor(request: ApiRequestOptions, response: ApiResult, message: string) {\n        super(message);\n\n        this.name = 'ApiError';\n        this.url = response.url;\n        this.status = response.status;\n        this.statusText = response.statusText;\n        this.body = response.body;\n        this.request = request;\n    }\n}\r\n","/* generated using openapi-typescript-codegen -- do not edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport class CancelError extends Error {\n\n    constructor(message: string) {\n        super(message);\n        this.name = 'CancelError';\n    }\n\n    public get isCancelled(): boolean {\n        return true;\n    }\n}\n\nexport interface OnCancel {\n    readonly isResolved: boolean;\n    readonly isRejected: boolean;\n    readonly isCancelled: boolean;\n\n    (cancelHandler: () => void): void;\n}\n\nexport class CancelablePromise<T> implements Promise<T> {\n    #isResolved: boolean;\n    #isRejected: boolean;\n    #isCancelled: boolean;\n    readonly #cancelHandlers: (() => void)[];\n    readonly #promise: Promise<T>;\n    #resolve?: (value: T | PromiseLike<T>) => void;\n    #reject?: (reason?: any) => void;\n\n    constructor(\n        executor: (\n            resolve: (value: T | PromiseLike<T>) => void,\n            reject: (reason?: any) => void,\n            onCancel: OnCancel\n        ) => void\n    ) {\n        this.#isResolved = false;\n        this.#isRejected = false;\n        this.#isCancelled = false;\n        this.#cancelHandlers = [];\n        this.#promise = new Promise<T>((resolve, reject) => {\n            this.#resolve = resolve;\n            this.#reject = reject;\n\n            const onResolve = (value: T | PromiseLike<T>): void => {\n                if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n                    return;\n                }\n                this.#isResolved = true;\n                if (this.#resolve) this.#resolve(value);\n            };\n\n            const onReject = (reason?: any): void => {\n                if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n                    return;\n                }\n                this.#isRejected = true;\n                if (this.#reject) this.#reject(reason);\n            };\n\n            const onCancel = (cancelHandler: () => void): void => {\n                if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n                    return;\n                }\n                this.#cancelHandlers.push(cancelHandler);\n            };\n\n            Object.defineProperty(onCancel, 'isResolved', {\n                get: (): boolean => this.#isResolved,\n            });\n\n            Object.defineProperty(onCancel, 'isRejected', {\n                get: (): boolean => this.#isRejected,\n            });\n\n            Object.defineProperty(onCancel, 'isCancelled', {\n                get: (): boolean => this.#isCancelled,\n            });\n\n            return executor(onResolve, onReject, onCancel as OnCancel);\n        });\n    }\n\n    get [Symbol.toStringTag]() {\n        return \"Cancellable Promise\";\n    }\n\n    public then<TResult1 = T, TResult2 = never>(\n        onFulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n        onRejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null\n    ): Promise<TResult1 | TResult2> {\n        return this.#promise.then(onFulfilled, onRejected);\n    }\n\n    public catch<TResult = never>(\n        onRejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null\n    ): Promise<T | TResult> {\n        return this.#promise.catch(onRejected);\n    }\n\n    public finally(onFinally?: (() => void) | null): Promise<T> {\n        return this.#promise.finally(onFinally);\n    }\n\n    public cancel(): void {\n        if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n            return;\n        }\n        this.#isCancelled = true;\n        if (this.#cancelHandlers.length) {\n            try {\n                for (const cancelHandler of this.#cancelHandlers) {\n                    cancelHandler();\n                }\n            } catch (error) {\n                console.warn('Cancellation threw an error', error);\n                return;\n            }\n        }\n        this.#cancelHandlers.length = 0;\n        if (this.#reject) this.#reject(new CancelError('Request aborted'));\n    }\n\n    public get isCancelled(): boolean {\n        return this.#isCancelled;\n    }\n}\r\n","/* generated using openapi-typescript-codegen -- do not edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport { ApiError } from './ApiError';\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\nimport { CancelablePromise } from './CancelablePromise';\nimport type { OnCancel } from './CancelablePromise';\nimport type { OpenAPIConfig } from './OpenAPI';\n\nexport const isDefined = <T>(value: T | null | undefined): value is Exclude<T, null | undefined> => {\n    return value !== undefined && value !== null;\n};\n\nexport const isString = (value: any): value is string => {\n    return typeof value === 'string';\n};\n\nexport const isStringWithValue = (value: any): value is string => {\n    return isString(value) && value !== '';\n};\n\nexport const isBlob = (value: any): value is Blob => {\n    return (\n        typeof value === 'object' &&\n        typeof value.type === 'string' &&\n        typeof value.stream === 'function' &&\n        typeof value.arrayBuffer === 'function' &&\n        typeof value.constructor === 'function' &&\n        typeof value.constructor.name === 'string' &&\n        /^(Blob|File)$/.test(value.constructor.name) &&\n        /^(Blob|File)$/.test(value[Symbol.toStringTag])\n    );\n};\n\nexport const isFormData = (value: any): value is FormData => {\n    return value instanceof FormData;\n};\n\nexport const base64 = (str: string): string => {\n    try {\n        return btoa(str);\n    } catch (err) {\n        // @ts-ignore\n        return Buffer.from(str).toString('base64');\n    }\n};\n\nexport const getQueryString = (params: Record<string, any>): string => {\n    const qs: string[] = [];\n\n    const append = (key: string, value: any) => {\n        qs.push(`${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`);\n    };\n\n    const process = (key: string, value: any) => {\n        if (isDefined(value)) {\n            if (Array.isArray(value)) {\n                value.forEach(v => {\n                    process(key, v);\n                });\n            } else if (typeof value === 'object') {\n                Object.entries(value).forEach(([k, v]) => {\n                    process(`${key}[${k}]`, v);\n                });\n            } else {\n                append(key, value);\n            }\n        }\n    };\n\n    Object.entries(params).forEach(([key, value]) => {\n        process(key, value);\n    });\n\n    if (qs.length > 0) {\n        return `?${qs.join('&')}`;\n    }\n\n    return '';\n};\n\nconst getUrl = (config: OpenAPIConfig, options: ApiRequestOptions): string => {\n    const encoder = config.ENCODE_PATH || encodeURI;\n\n    const path = options.url\n        .replace('{api-version}', config.VERSION)\n        .replace(/{(.*?)}/g, (substring: string, group: string) => {\n            if (options.path?.hasOwnProperty(group)) {\n                return encoder(String(options.path[group]));\n            }\n            return substring;\n        });\n\n    const url = `${config.BASE}${path}`;\n    if (options.query) {\n        return `${url}${getQueryString(options.query)}`;\n    }\n    return url;\n};\n\nexport const getFormData = (options: ApiRequestOptions): FormData | undefined => {\n    if (options.formData) {\n        const formData = new FormData();\n\n        const process = (key: string, value: any) => {\n            if (isString(value) || isBlob(value)) {\n                formData.append(key, value);\n            } else {\n                formData.append(key, JSON.stringify(value));\n            }\n        };\n\n        Object.entries(options.formData)\n            .filter(([_, value]) => isDefined(value))\n            .forEach(([key, value]) => {\n                if (Array.isArray(value)) {\n                    value.forEach(v => process(key, v));\n                } else {\n                    process(key, value);\n                }\n            });\n\n        return formData;\n    }\n    return undefined;\n};\n\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\n\nexport const resolve = async <T>(options: ApiRequestOptions, resolver?: T | Resolver<T>): Promise<T | undefined> => {\n    if (typeof resolver === 'function') {\n        return (resolver as Resolver<T>)(options);\n    }\n    return resolver;\n};\n\nexport const getHeaders = async (config: OpenAPIConfig, options: ApiRequestOptions): Promise<Headers> => {\n    const [token, username, password, additionalHeaders] = await Promise.all([\n        resolve(options, config.TOKEN),\n        resolve(options, config.USERNAME),\n        resolve(options, config.PASSWORD),\n        resolve(options, config.HEADERS),\n    ]);\n\n    const headers = Object.entries({\n        Accept: 'application/json',\n        ...additionalHeaders,\n        ...options.headers,\n    })\n        .filter(([_, value]) => isDefined(value))\n        .reduce((headers, [key, value]) => ({\n            ...headers,\n            [key]: String(value),\n        }), {} as Record<string, string>);\n\n    if (isStringWithValue(token)) {\n        headers['Authorization'] = `Bearer ${token}`;\n    }\n\n    if (isStringWithValue(username) && isStringWithValue(password)) {\n        const credentials = base64(`${username}:${password}`);\n        headers['Authorization'] = `Basic ${credentials}`;\n    }\n\n    if (options.body !== undefined) {\n        if (options.mediaType) {\n            headers['Content-Type'] = options.mediaType;\n        } else if (isBlob(options.body)) {\n            headers['Content-Type'] = options.body.type || 'application/octet-stream';\n        } else if (isString(options.body)) {\n            headers['Content-Type'] = 'text/plain';\n        } else if (!isFormData(options.body)) {\n            headers['Content-Type'] = 'application/json';\n        }\n    }\n\n    return new Headers(headers);\n};\n\nexport const getRequestBody = (options: ApiRequestOptions): any => {\n    if (options.body !== undefined) {\n        if (options.mediaType?.includes('/json')) {\n            return JSON.stringify(options.body)\n        } else if (isString(options.body) || isBlob(options.body) || isFormData(options.body)) {\n            return options.body;\n        } else {\n            return JSON.stringify(options.body);\n        }\n    }\n    return undefined;\n};\n\nexport const sendRequest = async (\n    config: OpenAPIConfig,\n    options: ApiRequestOptions,\n    url: string,\n    body: any,\n    formData: FormData | undefined,\n    headers: Headers,\n    onCancel: OnCancel\n): Promise<Response> => {\n    const controller = new AbortController();\n\n    const request: RequestInit = {\n        headers,\n        body: body ?? formData,\n        method: options.method,\n        signal: controller.signal,\n    };\n\n    if (config.WITH_CREDENTIALS) {\n        request.credentials = config.CREDENTIALS;\n    }\n\n    onCancel(() => controller.abort());\n\n    return await fetch(url, request);\n};\n\nexport const getResponseHeader = (response: Response, responseHeader?: string): string | undefined => {\n    if (responseHeader) {\n        const content = response.headers.get(responseHeader);\n        if (isString(content)) {\n            return content;\n        }\n    }\n    return undefined;\n};\n\nexport const getResponseBody = async (response: Response): Promise<any> => {\n    if (response.status !== 204) {\n        try {\n            const contentType = response.headers.get('Content-Type');\n            if (contentType) {\n                const jsonTypes = ['application/json', 'application/problem+json']\n                const isJSON = jsonTypes.some(type => contentType.toLowerCase().startsWith(type));\n                if (isJSON) {\n                    return await response.json();\n                } else {\n                    return await response.text();\n                }\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    }\n    return undefined;\n};\n\nexport const catchErrorCodes = (options: ApiRequestOptions, result: ApiResult): void => {\n    const errors: Record<number, string> = {\n        400: 'Bad Request',\n        401: 'Unauthorized',\n        403: 'Forbidden',\n        404: 'Not Found',\n        500: 'Internal Server Error',\n        502: 'Bad Gateway',\n        503: 'Service Unavailable',\n        ...options.errors,\n    }\n\n    const error = errors[result.status];\n    if (error) {\n        throw new ApiError(options, result, error);\n    }\n\n    if (!result.ok) {\n        const errorStatus = result.status ?? 'unknown';\n        const errorStatusText = result.statusText ?? 'unknown';\n        const errorBody = (() => {\n            try {\n                return JSON.stringify(result.body, null, 2);\n            } catch (e) {\n                return undefined;\n            }\n        })();\n\n        throw new ApiError(options, result,\n            `Generic Error: status: ${errorStatus}; status text: ${errorStatusText}; body: ${errorBody}`\n        );\n    }\n};\n\n/**\n * Request method\n * @param config The OpenAPI configuration object\n * @param options The request options from the service\n * @returns CancelablePromise<T>\n * @throws ApiError\n */\nexport const request = <T>(config: OpenAPIConfig, options: ApiRequestOptions): CancelablePromise<T> => {\n    return new CancelablePromise(async (resolve, reject, onCancel) => {\n        try {\n            const url = getUrl(config, options);\n            const formData = getFormData(options);\n            const body = getRequestBody(options);\n            const headers = await getHeaders(config, options);\n\n            if (!onCancel.isCancelled) {\n                const response = await sendRequest(config, options, url, body, formData, headers, onCancel);\n                const responseBody = await getResponseBody(response);\n                const responseHeader = getResponseHeader(response, options.responseHeader);\n\n                const result: ApiResult = {\n                    url,\n                    ok: response.ok,\n                    status: response.status,\n                    statusText: response.statusText,\n                    body: responseHeader ?? responseBody,\n                };\n\n                catchErrorCodes(options, result);\n\n                resolve(result.body);\n            }\n        } catch (error) {\n            reject(error);\n        }\n    });\n};\r\n","/* generated using openapi-typescript-codegen -- do not edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport { BaseHttpRequest } from './BaseHttpRequest';\nimport type { CancelablePromise } from './CancelablePromise';\nimport type { OpenAPIConfig } from './OpenAPI';\nimport { request as __request } from './request';\n\nexport class FetchHttpRequest extends BaseHttpRequest {\n\n    constructor(config: OpenAPIConfig) {\n        super(config);\n    }\n\n    /**\n     * Request method\n     * @param options The request options from the service\n     * @returns CancelablePromise<T>\n     * @throws ApiError\n     */\n    public override request<T>(options: ApiRequestOptions): CancelablePromise<T> {\n        return __request(this.config, options);\n    }\n}\r\n","/* generated using openapi-typescript-codegen -- do not edit */\r\n/* istanbul ignore file */\r\n/* tslint:disable */\r\n/* eslint-disable */\r\nimport type { BlockCatalogueModel } from '../models/BlockCatalogueModel';\r\nimport type { CancelablePromise } from '../core/CancelablePromise';\r\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\r\nexport class V1Service {\r\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\r\n    /**\r\n     * @returns string OK\r\n     * @throws ApiError\r\n     */\r\n    public postApiV1BlockfilterRemodel({\r\n        requestBody,\r\n    }: {\r\n        requestBody?: BlockCatalogueModel,\r\n    }): CancelablePromise<string> {\r\n        return this.httpRequest.request({\r\n            method: 'POST',\r\n            url: '/api/v1/blockfilter/remodel',\r\n            body: requestBody,\r\n            mediaType: 'application/json',\r\n            responseHeader: 'Umb-Notifications',\r\n            errors: {\r\n                401: `The resource is protected and requires an authentication token`,\r\n            },\r\n        });\r\n    }\r\n}\r\n","/* generated using openapi-typescript-codegen -- do not edit */\r\n/* istanbul ignore file */\r\n/* tslint:disable */\r\n/* eslint-disable */\r\nimport type { BaseHttpRequest } from './core/BaseHttpRequest';\r\nimport type { OpenAPIConfig } from './core/OpenAPI';\r\nimport { FetchHttpRequest } from './core/FetchHttpRequest';\r\nimport { V1Service } from './services/V1Service';\r\ntype HttpRequestConstructor = new (config: OpenAPIConfig) => BaseHttpRequest;\r\nexport class BlockfilterClient {\r\n    public readonly v1: V1Service;\r\n    public readonly request: BaseHttpRequest;\r\n    constructor(config?: Partial<OpenAPIConfig>, HttpRequest: HttpRequestConstructor = FetchHttpRequest) {\r\n        this.request = new HttpRequest({\r\n            BASE: config?.BASE ?? '',\r\n            VERSION: config?.VERSION ?? '1.0',\r\n            WITH_CREDENTIALS: config?.WITH_CREDENTIALS ?? false,\r\n            CREDENTIALS: config?.CREDENTIALS ?? 'include',\r\n            TOKEN: config?.TOKEN,\r\n            USERNAME: config?.USERNAME,\r\n            PASSWORD: config?.PASSWORD,\r\n            HEADERS: config?.HEADERS,\r\n            ENCODE_PATH: config?.ENCODE_PATH,\r\n        });\r\n        this.v1 = new V1Service(this.request);\r\n    }\r\n}\r\n\r\n","import { UMB_BLOCK_MANAGER_CONTEXT, UMB_BLOCK_WORKSPACE_MODAL, UmbBlockCatalogueModalData, UmbBlockCatalogueModalElement, UmbBlockCatalogueModalValue } from \"@umbraco-cms/backoffice/block\";\r\nimport { css, customElement, html, ifDefined, nothing, repeat, state, when } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { UMB_MODAL_CONTEXT, UmbModalBaseElement } from \"@umbraco-cms/backoffice/modal\";\r\nimport { BlockCatalogueModel, BlockfilterClient, OpenAPI } from \"../blockfilter-api\";\r\nimport { UmbRepositoryItemsManager } from \"@umbraco-cms/backoffice/repository\";\r\nimport { UMB_DOCUMENT_TYPE_ENTITY_TYPE, UMB_DOCUMENT_TYPE_ITEM_REPOSITORY_ALIAS, UmbDocumentTypeItemModel } from \"@umbraco-cms/backoffice/document-type\";\r\nimport { UMB_SERVER_CONTEXT } from \"@umbraco-cms/backoffice/server\";\r\nimport { UmbBlockTypeGroup, UmbBlockTypeWithGroupKey } from \"@umbraco-cms/backoffice/block-type\";\r\nimport { UmbModalRouteRegistrationController } from \"@umbraco-cms/backoffice/router\";\r\nimport { UUIInputEvent } from \"@umbraco-cms/backoffice/external/uui\";\r\nimport { UmbSelectionChangeEvent } from \"@umbraco-cms/backoffice/event\";\r\nimport { transformServerPathToClientPath } from \"@umbraco-cms/backoffice/utils\";\r\nimport { UMB_VARIANT_WORKSPACE_CONTEXT, UMB_WORKSPACE_CONTEXT } from \"@umbraco-cms/backoffice/workspace\";\r\nimport { UMB_DOCUMENT_WORKSPACE_CONTEXT } from \"@umbraco-cms/backoffice/document\";\r\n\r\ntype UmbBlockTypeItemWithGroupKey = UmbBlockTypeWithGroupKey & UmbDocumentTypeItemModel;\r\n\r\n@customElement('custom-umb-block-catalogue-modal')\r\nexport class CustomUmbBlockCatalogueModalElement extends UmbModalBaseElement<\r\n\tUmbBlockCatalogueModalData,\r\n\tUmbBlockCatalogueModalValue\r\n> {\r\n\treadonly #itemManager = new UmbRepositoryItemsManager<UmbDocumentTypeItemModel>(\r\n\t\tthis,\r\n\t\tUMB_DOCUMENT_TYPE_ITEM_REPOSITORY_ALIAS,\r\n\t);\r\n\r\n\t#search = '';\r\n\r\n\t#serverUrl = '';\r\n  #alias = '';\r\n  #unique = '';\r\n  #pageType = '';\r\n\tprivate _groupedBlocks: Array<{ name?: string; blocks: Array<UmbBlockTypeItemWithGroupKey> }> = [];\r\n\r\n\t@state()\r\n\tprivate _openClipboard?: boolean;\r\n\r\n\t@state()\r\n\tprivate _workspacePath?: string;\r\n\r\n\t@state()\r\n\tprivate _filtered: Array<{ name?: string; blocks: Array<UmbBlockTypeItemWithGroupKey> }> = [];\r\n\r\n\t@state()\r\n\tprivate _manager?: typeof UMB_BLOCK_MANAGER_CONTEXT.TYPE;\r\n\r\n\t@state()\r\n\tprivate _loading = true;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.consumeContext(UMB_SERVER_CONTEXT, (instance) => {\r\n\t\t\tthis.#serverUrl = instance?.getServerUrl() ?? '';\r\n\t\t});\r\n\r\n\t\tthis.consumeContext(UMB_MODAL_CONTEXT, (modalContext) => {\r\n\t\t\tif (modalContext?.data.createBlockInWorkspace) {\r\n\t\t\t\tnew UmbModalRouteRegistrationController(this, UMB_BLOCK_WORKSPACE_MODAL)\r\n\t\t\t\t\t//.addAdditionalPath('block') // No need for additional path specification in this context as this is for sure the only workspace we want to open here.\r\n\t\t\t\t\t.onSetup(() => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tdata: { preset: {}, originData: (modalContext.data as UmbBlockCatalogueModalData).originData },\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.onSubmit(() => {\r\n\t\t\t\t\t\t// When workspace is submitted, we want to close this modal.\r\n\t\t\t\t\t\tthis.modalContext?.submit();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.observeRouteBuilder((routeBuilder) => {\r\n\t\t\t\t\t\tthis._workspacePath = routeBuilder({});\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.consumeContext(UMB_BLOCK_MANAGER_CONTEXT, (manager) => {\r\n\t\t\tthis._manager = manager;\r\n      this.observe(this._manager?.propertyAlias, (value) => {\r\n        this.#alias = value ?? '';\r\n      });\r\n\t\t});\r\n\r\n    this.consumeContext(UMB_VARIANT_WORKSPACE_CONTEXT, (workspaceContext) => {\r\n      this.#unique = workspaceContext?.getUnique() ?? '';      \r\n    });\r\n\r\n    this.consumeContext(UMB_DOCUMENT_WORKSPACE_CONTEXT, (workspaceContext) => {\r\n       this.observe(workspaceContext?.contentTypeUnique, (value) => {\r\n         this.#pageType = value ?? '';\r\n       });\r\n    });\r\n\r\n\t\tthis.observe(this.#itemManager.items, async (items) => {\r\n\t\t\tthis.#observeBlockTypes(items);\r\n\t\t});\r\n\t}\r\n\r\n\toverride connectedCallback() {\r\n\t\tsuper.connectedCallback();\r\n\t\tif (!this.data) return;\r\n\r\n    const bfc = new BlockfilterClient({\r\n      TOKEN: OpenAPI.TOKEN,\r\n      BASE: OpenAPI.BASE\r\n    });\r\n\r\n    const requestObject = {\r\n      ...this.data as any, pageId: this.#unique, editingAlias: this.#alias, pageTypeId: this.#pageType\r\n    }\r\n\r\n    bfc.v1.postApiV1BlockfilterRemodel({\r\n      requestBody: requestObject\r\n    }).then((response : any) => {\r\n\r\n      const oldFilter = this.data?.clipboardFilter;\r\n      this.data = response as UmbBlockCatalogueModalData;\r\n      this._openClipboard = this.data.openClipboard ?? false;\r\n      this.#itemManager.setUniques(this.data.blocks.map((block) => block.contentElementTypeKey));\r\n\r\n      \r\n      this.data.clipboardFilter = async (clipboardEntryDetail) => {\r\n        console.log('I stole the clipboard', clipboardEntryDetail);\r\n        console.log('with data', this.data);\r\n\r\n        // ✅ Allowed keys from this.data.blocks\r\n        const allowedKeys = this.data?.blocks.map(b => b.contentElementTypeKey.toLowerCase());\r\n\r\n        // ✅ Gather all contentTypeKeys from clipboard entry\r\n        const clipboardKeys = clipboardEntryDetail.values\r\n            .flatMap(v => v.value?.contentData || [])\r\n            .map(cd => cd.contentTypeKey?.toLowerCase())\r\n            .filter(Boolean);\r\n\r\n        // ✅ Check: all clipboard contentTypeKeys must be in allowedKeys\r\n        const allAllowed = clipboardKeys.every(key => allowedKeys?.includes(key));\r\n\r\n        if (!allAllowed) {\r\n            return false;\r\n        }\r\n\r\n        // Keep old filter behavior if present\r\n        if (typeof oldFilter === 'function') {\r\n            return await oldFilter(clipboardEntryDetail);\r\n        }\r\n        return true;\r\n    };\r\n    });\r\n\t}\r\n\r\n\t#observeBlockTypes(items: Array<UmbDocumentTypeItemModel> | undefined) {\r\n\t\tif (!items?.length) return;\r\n\r\n\t\tconst lookup = items.reduce(\r\n\t\t\t(acc, item) => {\r\n\t\t\t\tacc[item.unique] = item;\r\n\t\t\t\treturn acc;\r\n\t\t\t},\r\n\t\t\t{} as { [key: string]: UmbDocumentTypeItemModel },\r\n\t\t);\r\n\r\n\t\tconst blocks: Array<UmbBlockTypeItemWithGroupKey> =\r\n\t\t\tthis.data?.blocks?.map((block) => ({ ...(lookup[block.contentElementTypeKey] ?? {}), ...block })) ?? [];\r\n\r\n\t\tconst blockGroups: Array<UmbBlockTypeGroup> = this.data?.blockGroups ?? [];\r\n\r\n\t\tconst noGroupBlocks = blocks.filter((block) => !blockGroups.find((group) => group.key === block.groupKey));\r\n\r\n\t\tconst grouped = blockGroups.map((group) => ({\r\n\t\t\tname: group.name,\r\n\t\t\tblocks: blocks.filter((block) => block.groupKey === group.key),\r\n\t\t}));\r\n\r\n\t\tthis._groupedBlocks = [{ blocks: noGroupBlocks }, ...grouped];\r\n\r\n\t\tthis.#updateFiltered();\r\n\r\n\t\tthis._loading = false;\r\n\t}\r\n\r\n\t#updateFiltered() {\r\n\t\tif (this.#search.length === 0) {\r\n\t\t\tthis._filtered = this._groupedBlocks;\r\n\t\t} else {\r\n\t\t\tconst search = this.#search.toLowerCase();\r\n\t\t\tthis._filtered = this._groupedBlocks.map((group) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...group,\r\n\t\t\t\t\tblocks: group.blocks.filter(\r\n\t\t\t\t\t\t(block) =>\r\n\t\t\t\t\t\t\tblock.label?.toLowerCase().includes(search) ||\r\n\t\t\t\t\t\t\tblock.name?.toLowerCase().includes(search) ||\r\n\t\t\t\t\t\t\tblock.description?.toLowerCase().includes(search),\r\n\t\t\t\t\t),\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t#onSearch(e: UUIInputEvent) {\r\n\t\tthis.#search = e.target.value as string;\r\n\t\tthis.#updateFiltered();\r\n\t}\r\n\r\n\t#chooseBlock(contentElementTypeKey: string) {\r\n\t\tthis.value = {\r\n\t\t\tcreate: {\r\n\t\t\t\tcontentElementTypeKey,\r\n\t\t\t},\r\n\t\t};\r\n\t\tthis.modalContext?.submit();\r\n\t}\r\n\r\n\tasync #onClipboardPickerSelectionChange(event: UmbSelectionChangeEvent) {\r\n\t\tconst target = event.target as any;\r\n\t\tconst selection = target?.selection || [];\r\n\t\tthis.value = {\r\n\t\t\tclipboard: {\r\n\t\t\t\tselection,\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`\r\n\t\t\t<umb-body-layout headline=${this.localize.term('blockEditor_addBlock')}>\r\n\t\t\t\t${this.#renderViews()}${this.#renderMain()}\r\n\t\t\t\t<div slot=\"actions\">\r\n\t\t\t\t\t<uui-button label=${this.localize.term('general_close')} @click=${this._rejectModal}></uui-button>\r\n\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\tlabel=${this.localize.term('general_submit')}\r\n\t\t\t\t\t\tlook=\"primary\"\r\n\t\t\t\t\t\tcolor=\"positive\"\r\n\t\t\t\t\t\t@click=${this._submitModal}></uui-button>\r\n\t\t\t\t</div>\r\n\t\t\t</umb-body-layout>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderMain() {\r\n\t\treturn this._manager ? (this._openClipboard ? this.#renderClipboard() : this.#renderCreateEmpty()) : nothing;\r\n\t}\r\n\r\n\t#renderClipboard() {\r\n\t\treturn html`\r\n\t\t\t<uui-box>\r\n\t\t\t\t<umb-clipboard-entry-picker\r\n\t\t\t\t\t.config=${{ multiple: true, asyncFilter: this.data?.clipboardFilter }}\r\n\t\t\t\t\t@selection-change=${this.#onClipboardPickerSelectionChange}></umb-clipboard-entry-picker>\r\n\t\t\t</uui-box>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderCreateEmpty() {\r\n\t\tif (this._loading) return html`<div id=\"loader\"><uui-loader></uui-loader></div>`;\r\n\t\treturn html`\r\n\t\t\t${when(\r\n\t\t\t\tthis.data?.blocks && this.data?.blocks.length > 8,\r\n\t\t\t\t() => html`\r\n\t\t\t\t\t<uui-input\r\n\t\t\t\t\t\tid=\"search\"\r\n\t\t\t\t\t\t@input=${this.#onSearch}\r\n\t\t\t\t\t\tlabel=${this.localize.term('general_search')}\r\n\t\t\t\t\t\tplaceholder=${this.localize.term('placeholders_search')}>\r\n\t\t\t\t\t\t<uui-icon name=\"icon-search\" slot=\"prepend\"></uui-icon>\r\n\t\t\t\t\t</uui-input>\r\n\t\t\t\t`,\r\n\t\t\t)}\r\n\t\t\t${repeat(\r\n\t\t\t\tthis._filtered,\r\n\t\t\t\t(group) => group.name,\r\n\t\t\t\t(group) => html`\r\n\t\t\t\t\t${when(group.name && group.blocks.length !== 0 && group.name !== '', () => html`<h4>${group.name}</h4>`)}\r\n\t\t\t\t\t<div class=\"blockGroup\">\r\n\t\t\t\t\t\t${repeat(\r\n\t\t\t\t\t\t\tgroup.blocks,\r\n\t\t\t\t\t\t\t(block) => block.contentElementTypeKey,\r\n\t\t\t\t\t\t\t(block) => this.#renderBlockTypeCard(block),\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t`,\r\n\t\t\t)}\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderBlockTypeCard(block: UmbBlockTypeItemWithGroupKey) {\r\n\t\tconst href =\r\n\t\t\tthis._workspacePath && this._manager!.getContentTypeHasProperties(block.contentElementTypeKey)\r\n\t\t\t\t? `${this._workspacePath}create/${block.contentElementTypeKey}`\r\n\t\t\t\t: undefined;\r\n\r\n\t\tconst path = block.thumbnail ? transformServerPathToClientPath(block.thumbnail) : undefined;\r\n\t\tconst imgSrc = path ? new URL(path, this.#serverUrl)?.href : undefined;\r\n\r\n\t\treturn html`\r\n\t\t\t<uui-card-block-type\r\n\t\t\t\thref=${ifDefined(href)}\r\n\t\t\t\tname=${this.localize.string(block.name)}\r\n\t\t\t\tdescription=${this.localize.string(block.description)}\r\n\t\t\t\t.background=${block.backgroundColor}\r\n\t\t\t\t@open=${() => this.#chooseBlock(block.contentElementTypeKey)}>\r\n\t\t\t\t${when(\r\n\t\t\t\t\timgSrc,\r\n\t\t\t\t\t(src) => html`<img src=${src} alt=\"\" />`,\r\n\t\t\t\t\t() => html`<umb-icon name=${block.icon ?? ''} color=${ifDefined(block.iconColor)}></umb-icon>`,\r\n\t\t\t\t)}\r\n\t\t\t\t<slot name=\"actions\" slot=\"actions\"> </slot>\r\n\t\t\t</uui-card-block-type>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderViews() {\r\n\t\treturn html`\r\n\t\t\t<uui-tab-group slot=\"navigation\">\r\n\t\t\t\t<uui-tab\r\n\t\t\t\t\tlabel=${this.localize.term('blockEditor_tabCreateEmpty')}\r\n\t\t\t\t\t?active=${!this._openClipboard}\r\n\t\t\t\t\t@click=${() => (this._openClipboard = false)}>\r\n\t\t\t\t\t<umb-localize key=${this.localize.term('blockEditor_tabCreateEmpty')}>Create Empty</umb-localize>\r\n\t\t\t\t\t<uui-icon slot=\"icon\" name=\"icon-add\"></uui-icon>\r\n\t\t\t\t</uui-tab>\r\n\t\t\t\t<uui-tab\r\n\t\t\t\t\tlabel=${this.localize.term('blockEditor_tabClipboard')}\r\n\t\t\t\t\t?active=${this._openClipboard}\r\n\t\t\t\t\t@click=${() => (this._openClipboard = true)}>\r\n\t\t\t\t\t<umb-localize key=${this.localize.term('blockEditor_tabClipboard')}>Clipboard</umb-localize>\r\n\t\t\t\t\t<uui-icon slot=\"icon\" name=\"icon-clipboard\"></uui-icon>\r\n\t\t\t\t</uui-tab>\r\n\t\t\t</uui-tab-group>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tcss`\r\n\t\t\t#loader {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tjustify-content: center;\r\n\t\t\t}\r\n\r\n\t\t\t#search {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tmargin-bottom: var(--uui-size-layout-1);\r\n\r\n\t\t\t\t> uui-icon {\r\n\t\t\t\t\tpadding-left: var(--uui-size-space-3);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t.blockGroup {\r\n\t\t\t\tdisplay: grid;\r\n\t\t\t\tgap: 1rem;\r\n\t\t\t\tgrid-template-columns: repeat(auto-fill, minmax(min(var(--umb-card-medium-min-width), 100%), 1fr));\r\n\t\t\t}\r\n\r\n\t\t\tuui-tab-group {\r\n\t\t\t\t--uui-tab-divider: var(--uui-color-border);\r\n\t\t\t\tborder-left: 1px solid var(--uui-color-border);\r\n\t\t\t\tborder-right: 1px solid var(--uui-color-border);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\nexport default CustomUmbBlockCatalogueModalElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'custom-umb-block-catalogue-modal': CustomUmbBlockCatalogueModalElement;\r\n\t}\r\n}\r\n"],"names":["BaseHttpRequest","config","ApiError","request","response","message","CancelError","CancelablePromise","executor","__privateAdd","_isResolved","_isRejected","_isCancelled","_cancelHandlers","_promise","_resolve","_reject","__privateSet","resolve","reject","onResolve","value","__privateGet","onReject","reason","onCancel","cancelHandler","onFulfilled","onRejected","onFinally","error","isDefined","isString","isStringWithValue","isBlob","isFormData","base64","str","getQueryString","params","qs","append","key","process","v","k","getUrl","options","encoder","path","substring","group","_a","url","getFormData","formData","_","resolver","getHeaders","token","username","password","additionalHeaders","headers","credentials","getRequestBody","sendRequest","body","controller","getResponseHeader","responseHeader","content","getResponseBody","contentType","type","catchErrorCodes","result","errorStatus","errorStatusText","errorBody","responseBody","FetchHttpRequest","__request","V1Service","httpRequest","requestBody","BlockfilterClient","HttpRequest","_itemManager","_search","_serverUrl","_alias","_unique","_pageType","_CustomUmbBlockCatalogueModalElement_instances","observeBlockTypes_fn","updateFiltered_fn","onSearch_fn","chooseBlock_fn","onClipboardPickerSelectionChange_fn","renderMain_fn","renderClipboard_fn","renderCreateEmpty_fn","renderBlockTypeCard_fn","renderViews_fn","CustomUmbBlockCatalogueModalElement","UmbModalBaseElement","UmbRepositoryItemsManager","UMB_DOCUMENT_TYPE_ITEM_REPOSITORY_ALIAS","UMB_SERVER_CONTEXT","instance","UMB_MODAL_CONTEXT","modalContext","UmbModalRouteRegistrationController","UMB_BLOCK_WORKSPACE_MODAL","routeBuilder","UMB_BLOCK_MANAGER_CONTEXT","manager","UMB_VARIANT_WORKSPACE_CONTEXT","workspaceContext","UMB_DOCUMENT_WORKSPACE_CONTEXT","items","__privateMethod","bfc","OpenAPI","requestObject","oldFilter","block","clipboardEntryDetail","allowedKeys","b","cd","html","lookup","acc","item","blocks","_b","blockGroups","_c","noGroupBlocks","grouped","search","contentElementTypeKey","event","target","selection","nothing","when","repeat","href","transformServerPathToClientPath","imgSrc","ifDefined","src","css","__decorateClass","state","customElement","CustomUmbBlockCatalogueModalElement$1"],"mappings":"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"}